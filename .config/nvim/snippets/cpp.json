{
        "template": {
            "prefix": "temp",
            "body": [
                "#define         MOD             ((int)(1e9 + 7))",
                "#define         fo(i, n)        for(int i=0; i < n; ++i)",
                "#define         print(k)        cout << k << '\\n';",
                "#define         elif            else if",
                "#define         fast()          ios_base::sync_with_stdio(false); cin.tie(NULL)",
                "#define         pb(x)           emplace_back(x)",
                "#define         N_MAX           (200000+5)",
                "#define         A_MAX           (1000000000+7)",
                "#define         nl              ('\\n')",
                "#define         sp              (' ')",				
                "#include <bits/stdc++.h>",
                "typedef long long ll;",
                "using namespace std;",
                "/*",
                "ll powmod(ll a, ll b, ll mod = MOD, bool isprime = true){a %= mod;ll res=1;if (isprime)b %= mod-1;while (b > 0){if (b & 1)res = (res * a) % mod;a=(a * a)% mod;b >>= 1;}return res;}",
                "ll int_sqrt(ll x){ll ans{0};for(ll k = 1LL << 30; k != 0; k /= 2){if ((ans + k) * (ans + k) <= x) {ans += k;}}return ans;}",
                "*/",
                "",
                "/********************************************************************CODE*********************************************************************/",
                "",
                "int main()",
                "{",
                "    fast();",
                "    $0    ",
                "",
                "}"
            ],
            "description": "template"
        },
        "saitama": {
            "prefix": "OK",
            "body": [
              "/*⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              "⠀⠀⠀⠀⣠⣶⡾⠏⠉⠙⠳⢦⡀⠀⠀⠀⢠⠞⠉⠙⠲⡀⠀",
              "⠀⠀⠀⣴⠿⠏⠀⠀⠀⠀⠀⠀⢳⡀⠀⡏⠀⠀⠀⠀⠀⢷",
              "⠀⠀⢠⣟⣋⡀⢀⣀⣀⡀⠀⣀⡀⣧⠀⢸⠀⠀⠀⠀⠀ ⡇",
              "⠀⠀⢸⣯⡭⠁⠸⣛⣟⠆⡴⣻⡲⣿⠀⣸⠀⠀OK⠀ ⡇",
              "⠀⠀⣟⣿⡭⠀⠀⠀⠀⠀⢱⠀⠀⣿⠀⢹⠀⠀⠀⠀⠀ ⡇",
              "⠀⠀⠙⢿⣯⠄⠀⠀⠀⢀⡀⠀⠀⡿⠀⠀⡇⠀⠀⠀⠀⡼",
              "⠀⠀⠀⠀⠹⣶⠆⠀⠀⠀⠀⠀⡴⠃⠀⠀⠘⠤⣄⣠⠞⠀",
              "⠀⠀⠀⠀⠀⢸⣷⡦⢤⡤⢤⣞⣁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              "⠀⠀⢀⣤⣴⣿⣏⠁⠀⠀⠸⣏⢯⣷⣖⣦⡀⠀⠀⠀⠀⠀⠀",
              "⢀⣾⣽⣿⣿⣿⣿⠛⢲⣶⣾⢉⡷⣿⣿⠵⣿⠀⠀⠀⠀⠀⠀",
              "⣼⣿⠍⠉⣿⡭⠉⠙⢺⣇⣼⡏⠀⠀⠀⣄⢸⠀⠀⠀⠀⠀⠀",
              "⣿⣿⣧⣀⣿.........⣀⣰⣏⣘⣆⣀⠀⠀",
              "*/"
            ],
            "description": "saitama"
          },
        "test cases": {
            "prefix": "fort",
            "body": [
                "int t;",
                "cin >> t;",
                "while(t--){",
                "    $0",
                "}",
                ""
            ],
            "description": "test cases"
        },
        "int input": {
            "prefix": "n=",
            "body": [
                "int ${1:n}; cin >> ${1:n};",
                "$0"
            ],
            "description": "int input"
        },
        "Solve t test cases": {
            "prefix": "solt",
            "body": [
              "#define         MOD             ((int)(1e9 + 7))",
              "#define         fo(i, n)        for(int i=0; i < n; ++i)",
              "#define         print(k)        cout << (k) << '\\n';",
              "#define         elif            else if",
              "#define         fast()          ios_base::sync_with_stdio(false); cin.tie(NULL)",
              "#define         pb(x)           emplace_back(x)",
              "#define         N_MAX           (200000+5)",
              "#define         A_MAX           (1000000000+7)",
              "#define         nl              ('\\n')",
              "#define         sp              (' ')",
              "#include <bits/stdc++.h>",
              "typedef long long ll;",
              "using namespace std;",
              "/*",
              "ll powmod(ll a, ll b, ll mod = MOD, bool isprime = true){a %= mod;ll res=1;if (isprime)b %= mod-1;while (b > 0){if (b & 1)res = (res * a) % mod;a=(a * a)% mod;b >>= 1;}return res;}",
              "ll int_sqrt(ll x){ll ans{0};for(ll k = 1LL << 30; k != 0; k /= 2){if ((ans + k) * (ans + k) <= x) {ans += k;}}return ans;}",
              "*/",
              "",
              "/********************************************************************CODE*********************************************************************/",
              "",
              "void solve(){",
              "    ${1:int n; cin >> n;}",
              "    $0",
              "}",
              "",
              "int main()",
              "{",
              "    fast();",
              "    int t;",
              "    cin >> t;",
              "    while(t--){",
              "        solve();",
              "    }",
              "}"
            ],
            "description": "Solve t test cases"
          },
          "one_piece_temp": {
            "prefix": "temp5",
            "body": [
              "#define         MOD             ((int)(1e9 + 7))",
              "#define         fo(i, n)        for(int i=0; i < n; ++i)",
              "#define         print(k)        cout << k << '\\n';",
              "#define         elif            else if",
              "#define         fast()          ios_base::sync_with_stdio(false); cin.tie(NULL)",
              "#define         pb(x)           emplace_back(x)",
              "#define         N_MAX           (200000+5)",
              "#define         A_MAX           (1000000000+7)",
              "#define         nl              ('\\n')",
              "#define         sp              (' ')",
              "#include <bits/stdc++.h>",
              "typedef long long ll;",
              "using namespace std;",
              "/*",
              "ll powmod(ll a, ll b, ll mod = MOD, bool isprime = true){a %= mod;ll res=1;if (isprime)b %= mod-1;while (b > 0){if (b & 1)res = (res * a) % mod;a=(a * a)% mod;b >>= 1;}return res;}",
              "ll int_sqrt(ll x){ll ans{0};for(ll k = 1LL << 30; k != 0; k /= 2){if ((ans + k) * (ans + k) <= x) {ans += k;}}return ans;}",
              "*/",
              "",
              "/*",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠄⠠⡀⠀⠀⢠⠻⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠊⠀⠀⠀⠹⠤⠔⢋⣰⡇⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠄⢒⣒⢲⡦⠀⢘⠀⡠⠊⠉⣩⠗⠈⠉⠉⢀⣀⡀⠀⠀⠀⡜⡝⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠣⢄⠁⣸⡀⠀⠀⠘⠀⢇⠀⠀⢧⠀⠀⡠⢊⢠⣤⠞⠇⠀⠀⡆⣧⠀⠀⠀⠀⠀⢀⠀⠠⠀⠤⢖⠀⠀⠁⠀⠒⠤⢀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢡⢈⠓⡲⠊⠁⡄⠈⠉⠒⠚⠉⠉⢰⢁⣸⣀⣀⣀⠠⠖⠀⡱⠑⣀⠠⠊⠁⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠁⠀⠀⠉⠒⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠄⠠⢄⠀⢠⠔⠒⠂⢄⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⡆⠀⠀⢀⠌⠈⠉⠀⠀⢰⢇⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⢀⡄⠀⠀⡰⠃⠀⢻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡉⠀⠀⠀⠀⠀⠀⠈⢂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⢀⣠⢤⣱⣇⣤⣔⣲⣸⣏⣄⣀⢈⡦⠒⢄⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣇⠙⠠⣶⢁⡶⡄⠘⡄⠀⢸⠀⠉⠉⠈⠝⠀⠀⠀⢀⡀⠤⢪⠃⠀⣼⣿⣟⡳⣏⠀⠀⣠⠇⠀⠀⠀⠀⠀⠀⣠⠖⢲⠋⠀⠈⡇⠀⠀⠀⠀⠂⠀⠀⠱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⢀⡴⣋⣶⠥⠚⢉⡁⠄⠀⠀⠉⠉⠉⠛⠶⢦⣄⡗⠢⡀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢸⠀⢸⡰⢼⣻⠃⢀⠛⣄⠸⣀⠀⡀⠀⠀⠀⠀⠀⠀⠀⡴⠁⠀⣴⡿⢉⡀⠱⣿⠀⢰⡏⠀⠀⠀⠀⠀⠀⢸⣁⣀⠀⠀⠀⠀⣹⠀⠀⠀⠀⠀⢡⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⣏⣶⠟⠁⢠⠶⠷⠶⠶⠶⠶⠶⠶⢴⣤⣄⣀⠈⠛⢦⡇⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠔⠉⡰⠃⠀⡀⠑⠚⠁⠀⢸⠀⣠⠟⠉⢉⠩⣉⣙⣲⣦⣤⣀⡀⢧⠀⠀⢿⡼⣿⣾⠀⠛⠦⢏⠣⠎⠁⠐⠂⠒⠈⠲⡇⠀⠀⠀⢀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡼⡵⠃⠀⡰⣁⣀⣄⣠⣀⣄⣠⣀⣄⣀⣀⣀⣉⡁⠀⠀⠱⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⣸⠀⠀⠀⠟⠒⠐⠒⠒⣺⠛⢀⣠⣾⠵⠒⠒⠒⠒⠒⠲⣦⣿⣿⡦⠤⠠⠝⢛⡩⠀⠀⠀⢸⠀⡇⠀⠀⠀⠀⠀⠀⠈⡝⠋⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⠁⠀⡰⠁⠀⠈⠀⠁⠀⠀⠀⠀⠀⠀⠀⠈⠈⠉⠁⠀⠀⢇",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠘⡄⠀⠀⠘⢆⠀⣠⠞⠁⠾⠋⣩⣤⠛⢶⡶⣶⠶⡶⣶⣾⣿⠿⢷⣀⠤⠔⠒⠁⠀⢀⡤⠊⢀⠇⠀⠀⠀⠀⠀⢠⠊⢀⡴⠒⠒⣄⠀⠀⠀⠀⠀⠀⢀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠃⠀⠀⡇⠰⠶⠯⠾⠵⠛⠾⠙⠛⠛⠛⠟⠿⠭⠼⠑⠚⠐⠸",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢦⠈⠢⡀⠀⠘⡴⠁⠀⠀⣠⣿⡿⠛⠆⠈⠃⢉⣙⣻⣉⣃⣀⣤⠘⢷⣤⣀⡀⠀⡴⣃⠄⠊⠁⠀⠀⠀⠀⠀⢀⠇⢠⡏⠀⠀⠀⢸⠀⠀⠀⠀⢀⣴⠃⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⠀⠀⠀⡇⢀⡤⣠⢤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣄⣀⠀⠐",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠂⠀⢀⣴⠊⠉⠆⠀⣀⣀⠤⠤⠘⠒⠒⠛⠂⠉⣁⣤⢶⣿⡿⠋⢀⡠⠔⠊⠉⠉⠉⠉⠉⠙⠛⡇⠀⢸⣽⣷⠉⠉⣰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢆⠀⠓⠤⡀⠀⡟⠀⠀⠠⠚⠉⠀⠀⠀⡥⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⡇⢈⣀⣁⣀⣠⡠⠤⠤⠤⠤⠤⠤⠤⠤⣄⣈⠉⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠝⠈⠓⠒⠉⠀⠀⢸⠉⠀⠀⠀⠀⣀⣀⣠⢤⠴⣶⣯⣷⣾⠿⠋⣠⠖⠁⢀⣠⣴⣶⣿⣿⣷⣶⣦⣤⠃⠀⣸⡿⡟⢀⡤⠼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠀⠀⣠⠞⠀⠀⠀⡀⠀⠀⠀⠀⢀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠀⠀⠀⡟⠁⠂⠁⠉⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁⠈⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⢀⡀⠀⠀⠀⠙⠒⢲⡞⣍⣳⠬⢶⠻⡏⡟⣾⣷⢧⣤⣴⠃⢀⣴⣿⣿⣿⠿⣟⡿⣿⣿⣿⡟⠀⢀⡯⠊⠀⠘⢦⠰⠀⢀⠤⠀⠂⠤⣀⠀⠀⠀⢀⣨⠔⠊⠁⠀⠀⠀⠊⠀⠀⠀⠀⣠⠊⠀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⢸⡴⢦⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠂⠀⠸",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠐⠈⠀⠀⠀⢰⣄⠀⠿⡀⠀⠀⠀⠀⢀⡏⠁⢀⠴⠚⠈⢷⣾⢿⣼⡄⠙⠧⣀⣾⣿⣿⣿⣭⢟⢫⡙⢭⣹⠟⠀⢀⡾⠒⠉⠉⠉⠀⣀⠆⠁⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠠⠔⠋⠀⡠⠔⠀⠈⠀⠀⠀⠁⠢⡀⢀⣠⡀⠀⢀⠔⠈⣁⠱⠄⠀⠀⠀⠀⢸⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣬",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⡆⠀⠀⠀⠀⠰⣌⡣⣽⡀⢳⡀⢀⣴⡾⠟⠁⠀⠘⣗⣒⣊⠥⣀⠸⣿⣿⡦⣀⠈⠙⠻⠿⢯⣔⣊⣦⡽⠖⠋⠀⣠⣾⠁⠀⠀⠀⠀⡔⠁⠀⠀⠀⢀⣀⠠⠠⠤⠀⠠⠀⠀⠐⠒⠒⠒⠒⠈⠁⠀⠀⠀⠀⠎⠀⠀⠀⣠⡴⢢⡀⠀⠀⢳⠎⡘⢀⡴⠡⠊⠀⠀⠀⠀⠀⠀⠀⠀⡿⡆⠀⠀⠀⡷⠶⠶⠶⠶⠶⠶⠶⠶⠶⠾⠾⠿⠳⠶⠖⠂⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⡇⠀⠀⠀⠀⠀⢨⣋⠈⢷⡘⡏⠁⠙⡆⠀⠀⠀⢠⠚⠀⠀⠀⠈⠣⡘⠛⢯⠭⠵⠢⢄⣀⡀⠀⠀⢀⣀⣠⢴⣺⡝⠱⠀⠀⠀⢀⠌⠀⠀⢀⡴⠚⠉⠉⠉⠐⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⠀⠀⠠⢠⠏⡆⢠⠇⠀⠀⣸⠀⠙⠊⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⣤⣷⢧⠀⠀⠀⢳⠀⡀⢀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠐⠀⢣⠀⠀⠀⠀⠀⠀⠀⠙⢶⣿⠛⠉⠉⣠⠤⠐⠊⠁⠀⠀⠀⠀⠀⠀⠈⠉⠑⠛⠒⠊⠁⠙⢦⢹⠸⣌⠳⣘⠶⠃⠀⠀⣇⠀⣀⡎⠀⠀⢪⡏⠀⠀⣆⠀⠀⠀⠀⠡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠁⣏⠀⠛⠋⣀⡤⠞⠁⠀⠀⠀⠀⡆⠀⠀⠀⠀⠀⠀⣠⣾⠟⣿⣿⠀⠀⠀⢺⠛⠛⠛⠛⠛⠛⠻⠟⠿⠿⠿⠿⠿⠭⠃⠀⠸⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠙⢤⡀⡜⠁⠀⠀⠀⠀⣀⠤⠐⠈⠉⠉⠁⠢⡤⡀⠀⠀⠀⠀⠀⡯⠷⣌⡷⠋⠀⠀⠀⠀⠘⢯⢼⠁⠀⠠⡏⢳⣄⠀⣿⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠁⠀⠀⠀⠘⢲⣒⠉⠁⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⢀⡠⢚⣵⠋⠀⢻⣿⠀⠀⠀⢸⣦⣴⣦⣶⣶⣶⣶⣶⣦⣶⣤⣦⣤⣀⣀⢠⠃⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠣⣀⠀⠣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠐⠢⠤⠒⡈⢁⠀⠤⠠⠤⣤⠤⣀⠀⢁⠀⠱⡀⣀⠠⣤⠇⠀⠀⠀⠀⠀⠀⠀⣀⣠⣼⠾⡀⠀⠀⣷⢄⢿⡂⣹⡇⠀⠀⠀⠀⠀⠡⡀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠃⠀⠀⠀⢀⠎⠥⠜⠀⠀⠀⠀⣀⡤⠖⠋⣀⠠⠄⠒⠈⠁⠀⠘⠁⠀⠀⢸⣿⠀⠀⠀⡎⠀⢀⡀⡀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⣦⡘⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⡌⣧⠘⡀⠀⢣⡏⣸⠀⣀⣀⣀⡀⠀⠀⠀⣼⡟⠋⠀⠀⣷⡀⠀⠹⡌⠳⣷⣸⡏⢆⠀⠀⠀⠀⠀⠐⢄⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⣀⠮⠤⢄⡠⢤⠤⣶⡯⠗⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠠⡀⠀⠀⢸⣾⠀⠀⠀⡗⠛⠛⠛⠙⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠀⡇⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠈⠀⠈⠓⠾⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢀⠀⢠⡄⢸⣺⡄⠁⠀⡸⢧⣻⠍⠟⠛⠛⢿⠷⠀⡀⠉⣠⣆⣤⡾⣿⣷⣄⠀⠈⢦⡈⢎⠳⣄⠱⡀⠀⠀⠀⠀⠀⠱⡆⠒⠒⠀⠁⠀⣠⠤⡤⠊⢀⣄⠀⡠⣤⡾⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡄⠀⠀⡏⠀⠀⢸⠀⣀⣀⣀⣄⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⣸⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠉⠓⠢⠄⣀⠀⠀⠀⠀⠀⠠⣄⡀⠘⢆⠣⠀⢧⠀⣿⠃⠀⠀⣽⢬⢯⡳⣷⢦⣤⠤⣿⠷⣷⡞⠉⢿⣿⡿⠃⣿⣏⢶⣄⠀⠙⠮⣀⠈⠳⡌⢢⡀⠀⠀⣀⡀⠈⠣⡀⠀⢠⠋⠀⠀⠀⢀⠎⢸⢉⡵⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣧⠀⠀⠀⢸⢻⡄⢰⡇⠀⠀⢸⠀⠀⠀⠈⠈⠉⠉⠉⠉⠉⠉⠋⠙⠛⠀⡏⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢃⣀⡴⠀⠂⠠⡀⠀⠀⠀⠀⠀⠀⠈⠑⠒⠠⢄⡀⠉⢮⠂⡌⣆⠱⡘⠀⣿⠀⠀⠘⠀⠀⢳⡑⡞⣾⢋⣶⣀⠀⢹⣷⠀⠀⢀⡄⣠⡿⢿⡈⠙⢵⡢⢄⣈⣉⡒⠼⢦⠈⢦⣼⢫⣿⠞⠉⢉⡦⡇⠀⠀⠀⢠⢻⣆⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣯⡳⣄⠀⠘⡧⣇⢸⡇⠀⠀⢸⠰⠴⣶⣶⣶⣶⣖⣶⣲⣖⣶⣶⡶⠦⢰⠁⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠬⠒⠂⢄⡀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠃⠀⠑⠢⢙⠢⢸⡄⢷⠀⡏⠠⠀⠀⠀⠀⠘⣷⡄⠘⣿⣯⢿⣧⠀⢻⡆⠀⠺⡼⢋⣷⢬⣣⠀⡀⣀⢉⡒⢦⣌⣉⣉⡳⣼⢰⠏⣏⡀⣠⡿⠀⠀⠀⠀⢀⣼⢼⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⣼⣷⣤⣷⡹⡼⡇⠀⠀⢸⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⣠⠖⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⠀⠀⠀⠑⠢⡇⢼⢸⠁⠁⠀⠀⠀⠀⠀⡏⢣⠀⣿⣿⠏⠃⠀⢸⣷⣄⣤⣤⡽⠶⠚⠉⠛⡣⠄⠀⢀⠉⠈⠁⠀⠉⠉⠉⠉⠉⠉⢓⠃⠀⠀⠀⣠⣞⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⣉⣧⠀⠀⢸⠀⠉⠿⠷⠶⠶⠾⠶⠿⠿⠻⠯⠉⢰⠃⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠳⣄⣀⡴⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⢱⣸⡏⠈⠀⠀⣄⢀⣠⣾⣴⣦⡄⣻⠏⢠⣠⣿⣿⣝⣹⡞⣡⣴⠶⠛⣛⣩⣴⠎⢉⣉⣀⠀⠀⣀⣠⣴⣋⣠⣤⣴⠾⡀⠀⠀⠀⠽⣌⡟⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣤⣤⣤⢤⡒⠒⠪⠳⣼⠀⠀⠈⡄⠲⠤⣤⢤⣤⢤⡤⢤⠤⡤⠶⠀⡜⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠓⠄⢠⠀⠀⠀⠀⠀⠀⢀⡆⠀⠀⠀⠀⠀⠀⢘⠀⠀⠀⠀⠀⠀⠀⢨⠞⠀⠀⠀⠀⡅⠉⠟⢻⠟⢻⠀⢹⣶⣿⡿⣿⠿⢡⣾⣿⠟⣡⣾⠟⠋⣁⣤⢤⣃⣤⡴⠞⡻⠍⠁⠀⠀⢠⡞⡍⠀⠙⠀⠀⠀⡴⡸⣏⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⢖⡫⣵⠶⠛⠉⠁⠀⠀⣱⠀⠀⠀⠀⢆⠀⠀⢣⠀⠀⠈⠉⠈⠁⠉⠈⠀⠁⠀⡴⠁⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡀⠀⠀⠀⠀⢠⡎⠀⠀⠀⠀⠀⣀⠤⠊⠀⠀⠀⠀⢀⠠⠐⠁⠀⠀⠀⠈⠀⡇⠀⠀⣼⣤⠏⠀⢸⣷⠏⠀⠃⠀⠘⢿⣯⣴⣿⢇⣴⣿⡟⣡⣾⡏⠭⠘⠦⣄⠤⠤⠤⣤⠏⠀⣇⠀⠀⠀⠀⠀⢫⢉⣽⡾⡄⠀⠀⠀⠀⠀⠀⠀⢀⡴⣋⢦⢿⢋⡧⠀⢀⣤⠦⣤⠀⠸⢤⠀⠀⠀⠀⠠⡀⠈⡇⠠⠿⠽⠯⠟⠹⠋⢋⡩⠚⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠤⠐⠊⠁⠀⠉⠈⠁⠉⠀⠀⠀⠀⠀⠀⡤⠊⠀⠀⠀⠀⠀⠀⠠⠃⢀⠇⠰⠾⠛⣉⣀⣀⢸⡿⢀⣠⣴⣶⣶⣿⡟⢻⣿⣿⠟⣹⣴⡿⢻⣧⡀⠀⠀⠀⠉⠓⠳⢿⡀⠀⡽⠄⠀⠀⠀⠀⠘⡟⢸⡇⣧⠀⠀⠀⠀⠀⢀⡴⣋⢶⠝⠁⠈⢻⢠⠄⠉⠀⠀⠈⠀⢠⢾⠀⠀⠀⠀⠀⠀⠁⠲⠤⠠⠄⠄⠤⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⣿⡍⣦⠀⠀⠀⠐⠀⢀⠞⣠⡄⠀⠰⣁⣠⡏⢨⣗⣾⠟⠋⢀⣀⠀⡇⣨⠿⣶⣶⣿⠛⠀⠀⠻⣿⣶⣦⢤⡒⠲⣊⣿⠃⠀⢷⠀⠀⠀⠀⠀⠀⠘⢤⣻⡌⣧⡀⠀⢀⣠⢏⡲⡱⠃⠀⠀⠀⠈⣏⣰⠄⠰⠚⠓⣆⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠸⠂⠒⠊⠁⠀⠀⢀⣠⢶⠿⣊⠟⠀⢀⣴⠿⠋⠀⣸⣷⠈⢠⣾⡿⠛⠛⠹⠟⠉⠀⠀⠉⠁⣀⣀⣾⣄⠣⡙⢷⡌⢦⣟⡿⠀⠀⡾⡆⠀⠀⠀⠀⠀⠀⠀⡱⢿⡰⣍⡛⢭⢢⡓⡼⠁⠀⠀⠀⠀⠀⢸⣁⣤⠠⣤⣌⠁⠀⠈⡇⠀⠀⠀⠀⡀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡅⠀⠀⠀⠀⢀⠤⢚⣹⣾⡿⠋⠁⠀⢀⣈⡠⢞⡍⢀⠏⣷⠀⠻⠋⠀⠀⢀⣀⣤⣤⠶⠒⢋⣩⣡⠴⠚⠙⢷⠘⡈⣹⠏⡞⢱⡏⡆⡷⠙⣄⠀⠀⠀⠀⠀⠀⠓⢬⢻⡴⡹⢌⡖⣭⠃⠀⠀⠀⠀⠀⠀⣜⡥⠄⠀⠀⠸⡆⠀⢈⣇⠠⠐⠈⠀⠀⠀⠀⢱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⢀⠞⣡⣴⣿⡿⠉⠀⠀⠀⢸⠁⢀⡽⠎⢀⣎⣤⣿⣀⣤⢶⣶⠿⠿⠛⠉⣀⠤⠚⠛⠛⠒⠒⠒⠒⠊⢣⡿⠃⡼⠁⠸⡇⢹⣿⢠⠸⡄⠀⠀⠀⠀⠀⠀⠀⢯⣽⣎⠵⡸⡼⠀⠀⠀⠀⠀⠀⢰⡫⠴⠂⣶⣶⢦⡀⢰⡟⠁⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡖⠈⠀⠀⢀⡴⢃⣨⠾⢻⠋⠀⠀⠀⠀⢠⠾⠚⠉⣠⣴⣿⠟⠋⣡⠔⠋⢉⣀⣤⠶⠾⠭⠖⠒⠒⠛⠛⠚⠓⠒⠋⣩⠏⠀⣸⠃⠀⠀⠀⠈⢿⡼⡀⠱⣄⠀⠀⠀⠀⠀⠀⠘⢄⣈⣷⡵⠃⠀⠀⠀⢀⡀⠴⣅⣀⠤⠚⠀⢨⠿⢁⣠⠇⠀⠀⠀⠀⠀⠀⢀⡴⠇⠒⠀⠁⠒⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⢀⡀⠀⠀⣀⠧⠄⣢⠤⠟⠒⠛⠒⠢⢦⣽⠶⢦⣄⣀⠀⣠⡴⠚⣩⠴⢃⠴⢋⡠⠔⢊⡵⣎⡵⠴⡒⠒⣎⢉⣉⡭⠝⠋⣑⣲⡞⢡⠃⡰⠃⣴⠃⠀⠀⠀⠈⢆⢣⠀⠈⠑⡄⠀⠀⠀⠀⠀⠀⠀⠙⠙⠨⠭⠮⢭⡹⣄⣠⠒⠉⢢⣄⣰⠊⠀⡏⡩⠄⠒⠈⠐⡄⠀⠔⠋⠀⠀⠀⠀⠀⠀⣡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠎⠀⢀⣠⠤⠃⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⠬⣍⢻⡯⠴⣉⣁⡖⠡⠂⠁⢠⡴⠿⠭⠴⠦⢤⠟⠛⣯⣁⣰⠤⢟⡋⡡⠊⠰⠁⡴⢡⢪⠎⠀⠀⠀⠀⠀⠈⢦⣣⠀⠀⠸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⢠⡾⠁⠀⣠⠔⠋⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠀⡾⢀⠾⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢦⡈⠓⢤⡀⠈⠹⠶⣖⠧⠤⠴⠶⢶⠶⢺⠛⠛⢹⣀⣤⠞⢋⠜⠀⡴⢁⡴⡑⡡⠃⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠈⠒⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠔⠊⠑⠜⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⢀⠞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⠀⣸⠗⡏⠀⠀⠀⢀⠤⠤⢤⠤⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⢦⠀⠉⠲⣤⣀⠀⠈⠁⠀⠀⣀⣠⡬⣷⠺⡋⡏⠀⠔⠁⢀⢞⡠⢋⠖⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠒⠀⠈⠱⡄⠐⠂⠒⠐⠂⠤⠚⠀⠀⠀⣀⡤⠒⠉⠁⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠉⠉⠐⠤⡀⠀⠀⠀⠀⠀⠀⢀⠆⣇⠀⠀⠀⠀⣾⠉⠀⢰⡏⣀⣠⣈⣿⢧⣌⡑⠤⡠⠤⣀⡀⠀⠀⠀⠀⠀⠈⢷⣦⡀⠙⢯⣙⠛⠶⣤⡀⣑⠊⠁⠀⠀⢱⣹⡀⠀⣴⠿⠋⣰⡫⠊⠀⠀⠀⢶⡒⠒⠒⠶⠶⣖⣦⡬⠭⠥⠤⠶⠖⠶⠆⠀⠙⠳⠖⠛⣦⣤⡤⠖⣲⠖⠊⠁⠀⠀⠀⠀⠀⠀⡠⠐⠁⢠⡴⢢⡀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⣠⠤⣤⡀⠈⡄⠀⠀⠀⠀⠀⣼⠏⠉⢀⠔⢦⠚⠹⠃⠀⣸⣾⠟⠛⠉⠛⠚⠶⣝⣒⢒⢶⣯⡇⠀⠀⠀⠀⠀⠀⠘⠻⣷⣄⠀⠉⠳⣄⠀⠉⠒⠬⣑⡚⢶⠦⠟⡇⠈⠁⣠⡾⠋⠀⠀⠀⠀⠀⠀⠈⠉⠐⠒⠒⠐⠂⠒⠒⠲⠤⢤⣤⣤⠴⠶⠶⠒⠛⢋⡩⠤⠶⠍⣀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⡜⢡⠀⣷⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⢀⠖⠉⢀⡽⣿⣬⢓⣦⡙⠶⢷⡀⠀⠀⠀⠀⣧⢦⠀⡯⣆⠘⠇⠘⣇⣼⡟⠁⠀⠀⠀⠀⠀⠀⠀⠈⠻⣬⢿⣞⢆⠀⠀⠀⠀⠀⠀⠀⢱⠙⠷⣝⠢⢌⡑⠢⠄⣀⠀⠀⠈⠉⢹⢸⠀⠐⠋⠀⢀⣤⡶⠖⠂⠀⠀⠀⠀⠐⢄⠀⡀⠀⠤⠄⠒⣀⡀⠀⠀⢀⣠⣤⡴⠛⠓⠒⠒⠒⠤⣀⠉⠢⠀⠀⠀⠀⠀⢰⠀⠀⠄⢰⣣⠎⠀⣿⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⣀⣸⣠⢞⣭⠖⠓⠉⠉⠈⠉⠉⠒⠼⣒⠤⢄⡠⡇⠀⠀⡇⠳⣄⡀⠀⣼⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢞⢯⡻⣦⡀⠀⠀⠀⠀⠀⠈⡇⠀⠀⠀⢠⡏⠒⠤⣒⠬⣉⠀⠂⠀⢏⣆⠀⠀⢰⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢑⣠⠴⠖⢚⣉⡥⠔⢒⡮⠙⠊⠀⠉⠉⠉⠐⠒⠤⡀⠈⢧⢣⠈⣦⠀⠀⠀⠸⠀⠀⠀⠀⠁⠀⣰⠃⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⢰⠉⣠⢲⣹⠟⠁⠀⣩⡽⢋⣴⠦⣀⠀⠀⠈⠙⢷⣝⢵⢢⡐⠁⢀⠈⠙⣶⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⡜⣽⡗⢄⠀⠀⠀⠀⠀⢳⠀⠀⠀⣾⠀⠀⡄⠀⠉⠙⠛⠶⠤⠸⠸⡆⠀⠉⠀⠀⠀⠀⠀⠀⣀⠤⠔⠒⠉⠁⠀⠊⠉⢉⡠⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣸⢠⠀⣿⢣⠀⠀⠀⠣⡀⠀⠀⣠⠜⠁⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠸⣴⣵⠚⠀⠀⢀⣼⠟⣡⡾⠁⣠⣾⠟⢂⡀⠀⠀⠹⣿⣏⣿⣀⡘⣶⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣷⢸⣇⢨⡂⠀⠀⠀⠀⠀⡇⠀⢸⡭⠀⣰⡇⠀⢀⡆⠀⠀⠀⠀⢣⠱⡀⠀⠀⠀⠀⠀⠀⠙⠒⣒⠀⠀⠀⣀⠤⠒⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⢸⠀⢿⢘⠀⠀⠀⠀⠀⠉⢻⠀⠀⠀⠀⠀⢈⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠰⡟⠁⠀⠀⣰⡿⢃⣾⠏⢀⣶⠟⠁⢀⣴⡕⢤⠀⠀⠈⢿⣿⡗⠛⠛⠷⠶⠦⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢟⢢⢻⣆⠉⢆⠀⠀⠀⠀⢸⠀⣦⠇⣰⡟⠀⢀⠎⡇⠀⠀⠀⠀⠀⡇⠱⡤⠤⠄⠒⠐⠂⣉⣉⠠⠔⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⢀⠏⢸⣸⠸⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠘⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠃⢱⠁⠀⢠⣾⠟⣰⡿⠁⣰⡿⠃⠀⣰⡿⠋⣠⣾⠵⡄⠀⠀⠡⣱⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⣎⢲⡏⡸⠀⠈⢢⠀⠀⠀⢸⢰⡟⢠⡹⠀⢀⠎⠀⡇⠀⠀⣀⠠⠒⣁⠤⠴⠤⠔⠒⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠐⠡⢂⠎⠀⣇⡏⢸⠀⠀⢀⠠⠒⠁⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⢾⠀⣴⡿⢃⣾⠏⣠⡾⠋⠀⣠⣾⠟⢀⣾⠟⢁⡴⡾⢆⠀⠀⠘⣇⡀⠀⠀⠀⠀⠈⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⣴⢣⣹⣰⠏⠀⡇⠀⠰⡏⠀⠀⠀⢸⡞⠁⡵⠁⡠⢻⠀⠸⡁⣒⡡⠔⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⡁⠊⡰⠋⠀⣸⡟⠀⡎⠀⡐⠁⠀⠀⠀⠀⠀⠀⣀⡤⠤⣄⠀⢃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⢸⡸⠋⣰⡟⢁⣴⠟⠁⣠⣾⠟⢁⣼⠟⠁⣠⣾⠟⠁⣠⣷⠀⠀⠨⣷⠀⠀⠀⠀⠀⠘⣟⢧⡀⠀⠀⠀⠀⢠⣾⠵⠊⠁⠀⠀⡴⡷⠀⠀⡇⠀⠀⠀⢻⣀⡾⢁⠜⡱⢋⡠⠖⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠒⠠⠀⢀⠀⠀⠀⠀⠀⠀⠠⠔⠊⢀⡨⢤⠞⠁⠀⢰⡟⠀⡜⠀⡘⠀⠀⠈⠀⠀⠀⠀⡰⠁⠀⡴⠸⡄⠀⠡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⡇⠘⠃⣴⡿⠁⢀⣶⠟⢁⣴⡿⠉⢠⢞⡵⠃⢠⢞⡽⠃⣳⡃⠀⠈⢿⡀⠀⠀⠀⠀⠘⣞⡧⠀⠀⠀⣴⡿⠁⢀⣀⣀⡤⠔⣇⠀⠀⡴⠃⠀⢀⠔⣻⠏⠀⢡⠾⠓⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢄⣀⡀⠀⠀⠈⢁⡠⠤⠐⠂⣠⠴⠋⡰⠋⠀⠀⢠⠟⠀⣰⠃⠀⡅⠀⡄⠀⠀⠀⠀⢰⡇⠀⠸⣇⣰⠃⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠸⡄⠾⠋⢀⣴⡟⢁⣴⡿⠋⢀⡴⡻⠋⢀⡴⣫⠋⢀⣴⡟⠙⣄⠆⠈⢳⡄⠀⠀⠀⠀⢿⠇⠀⠀⢠⡟⣩⠟⠁⠀⡞⠀⠀⠈⠳⠾⠔⠈⠀⣨⣿⠁⣀⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢟⢤⡀⠀⠉⠉⠉⠀⢀⣠⠴⠋⠁⣠⠞⠀⠀⠀⣰⠋⠀⣰⠋⠀⢠⠀⠀⠀⠀⠀⠀⠀⠘⡇⠀⠀⠀⠁⠀⠀⣠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠱⣄⠐⠿⠃⣠⡿⠋⠀⣤⣯⠞⠁⡴⣫⠞⠁⣠⣾⠋⢀⣼⡿⠳⢄⠀⠹⣦⡀⠀⠀⠀⢰⣤⡀⢸⢡⡟⠀⠀⢸⡇⠀⠀⠀⡴⠃⠀⡠⢮⡥⡮⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡀⠈⠙⠒⠒⠒⢋⡡⠔⠀⣠⠜⠁⠀⠀⣠⡾⠁⠀⡰⠃⠀⠀⠈⡀⠀⠣⠀⠀⠀⠀⠀⢣⠈⠑⠒⠒⠂⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠈⠢⡀⠚⠁⠀⣠⣾⠟⠁⣠⢞⡽⠁⢀⣾⠟⠁⣠⢯⠞⠀⠀⣸⡿⡀⠈⠓⢦⡀⠀⠀⢿⣷⣼⠀⠻⢤⠀⠀⠙⠶⠖⠀⠈⣍⣉⣀⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡔⠒⠒⠒⠈⠁⠀⣠⠞⠁⠀⣀⠤⣺⠋⠀⠀⡴⠁⠀⠀⠀⠀⢣⠀⠀⢀⡀⠀⠀⠀⠸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠈⠳⢄⠈⠛⠁⣠⢞⡵⠋⢀⡴⣻⠋⢀⡼⡵⠋⠀⢀⣾⠟⠀⠈⣵⠦⣀⠈⠛⢯⣏⡹⢻⡄⠀⠰⣄⡀⠀⠀⣦⣀⣀⠤⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⣀⠀⢀⡠⠞⠃⠠⢔⣈⡠⠖⠉⡇⢀⠞⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⣽⠀⠀⢀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢤⠐⠓⠋⠀⣠⢏⡼⠁⣠⢏⠞⠁⠀⣰⡿⠃⠀⣠⡾⠋⠀⣠⣷⢄⡀⠉⢷⡩⡏⠓⠒⠚⠈⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠊⠀⠀⠀⠀⠀⢁⠀⢀⠎⡠⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠏⠀⡴⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⣀⠀⠑⠋⢀⡴⣣⠋⠀⣀⣾⠏⠀⢀⣾⠏⠀⢀⣴⡟⠁⠀⣩⣦⠀⠙⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⡀⢃⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⢤⡀⠉⠞⠁⠀⣴⡟⠁⢀⣴⡿⠁⠀⣤⣿⠋⠀⣠⣾⠟⠀⢑⣄⢡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢂⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⢄⡀⠛⠉⠀⣠⣾⠋⠀⢀⣾⡟⠁⢀⣴⡟⠁⠀⣴⠟⠀⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⠤⡀⠁⠀⠀⣰⡿⠋⠀⣠⢾⠏⠀⣠⣾⠋⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⣄⠉⠁⢀⡴⡷⠋⢀⣴⠟⠁⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              "*/",
              "",
              "",
              "int main()",
              "{",
              "    fast();",
              "        ",
              "",
              "}"
            ],
            "description": "one_piece_temp"
          },
          "one_piece_solt": {
            "prefix": "solt5",
            "body": [
              "#define         MOD             ((int)(1e9 + 7))",
              "#define         fo(i, n)        for(int i=0; i < n; ++i)",
              "#define         print(k)        cout << (k) << '\\n';",
              "#define         elif            else if",
              "#define         fast()          ios_base::sync_with_stdio(false); cin.tie(NULL)",
              "#define         pb(x)           emplace_back(x)",
              "#define         N_MAX           (200000+5)",
              "#define         A_MAX           (1000000000+7)",
              "#define         nl              ('\\n')",
              "#define         sp              (' ')",
              "#include <bits/stdc++.h>",
              "typedef long long ll;",
              "using namespace std;",
              "/*",
              "ll powmod(ll a, ll b, ll mod = MOD, bool isprime = true){a %= mod;ll res=1;if (isprime)b %= mod-1;while (b > 0){if (b & 1)res = (res * a) % mod;a=(a * a)% mod;b >>= 1;}return res;}",
              "ll int_sqrt(ll x){ll ans{0};for(ll k = 1LL << 30; k != 0; k /= 2){if ((ans + k) * (ans + k) <= x) {ans += k;}}return ans;}",
              "*/",
              "",
              "/*",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠄⠠⡀⠀⠀⢠⠻⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠊⠀⠀⠀⠹⠤⠔⢋⣰⡇⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠄⢒⣒⢲⡦⠀⢘⠀⡠⠊⠉⣩⠗⠈⠉⠉⢀⣀⡀⠀⠀⠀⡜⡝⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠣⢄⠁⣸⡀⠀⠀⠘⠀⢇⠀⠀⢧⠀⠀⡠⢊⢠⣤⠞⠇⠀⠀⡆⣧⠀⠀⠀⠀⠀⢀⠀⠠⠀⠤⢖⠀⠀⠁⠀⠒⠤⢀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢡⢈⠓⡲⠊⠁⡄⠈⠉⠒⠚⠉⠉⢰⢁⣸⣀⣀⣀⠠⠖⠀⡱⠑⣀⠠⠊⠁⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠁⠀⠀⠉⠒⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠄⠠⢄⠀⢠⠔⠒⠂⢄⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⡆⠀⠀⢀⠌⠈⠉⠀⠀⢰⢇⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⢀⡄⠀⠀⡰⠃⠀⢻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡉⠀⠀⠀⠀⠀⠀⠈⢂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⢀⣠⢤⣱⣇⣤⣔⣲⣸⣏⣄⣀⢈⡦⠒⢄⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣇⠙⠠⣶⢁⡶⡄⠘⡄⠀⢸⠀⠉⠉⠈⠝⠀⠀⠀⢀⡀⠤⢪⠃⠀⣼⣿⣟⡳⣏⠀⠀⣠⠇⠀⠀⠀⠀⠀⠀⣠⠖⢲⠋⠀⠈⡇⠀⠀⠀⠀⠂⠀⠀⠱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⢀⡴⣋⣶⠥⠚⢉⡁⠄⠀⠀⠉⠉⠉⠛⠶⢦⣄⡗⠢⡀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢸⠀⢸⡰⢼⣻⠃⢀⠛⣄⠸⣀⠀⡀⠀⠀⠀⠀⠀⠀⠀⡴⠁⠀⣴⡿⢉⡀⠱⣿⠀⢰⡏⠀⠀⠀⠀⠀⠀⢸⣁⣀⠀⠀⠀⠀⣹⠀⠀⠀⠀⠀⢡⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⣏⣶⠟⠁⢠⠶⠷⠶⠶⠶⠶⠶⠶⢴⣤⣄⣀⠈⠛⢦⡇⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠔⠉⡰⠃⠀⡀⠑⠚⠁⠀⢸⠀⣠⠟⠉⢉⠩⣉⣙⣲⣦⣤⣀⡀⢧⠀⠀⢿⡼⣿⣾⠀⠛⠦⢏⠣⠎⠁⠐⠂⠒⠈⠲⡇⠀⠀⠀⢀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡼⡵⠃⠀⡰⣁⣀⣄⣠⣀⣄⣠⣀⣄⣀⣀⣀⣉⡁⠀⠀⠱⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⣸⠀⠀⠀⠟⠒⠐⠒⠒⣺⠛⢀⣠⣾⠵⠒⠒⠒⠒⠒⠲⣦⣿⣿⡦⠤⠠⠝⢛⡩⠀⠀⠀⢸⠀⡇⠀⠀⠀⠀⠀⠀⠈⡝⠋⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⠁⠀⡰⠁⠀⠈⠀⠁⠀⠀⠀⠀⠀⠀⠀⠈⠈⠉⠁⠀⠀⢇",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠘⡄⠀⠀⠘⢆⠀⣠⠞⠁⠾⠋⣩⣤⠛⢶⡶⣶⠶⡶⣶⣾⣿⠿⢷⣀⠤⠔⠒⠁⠀⢀⡤⠊⢀⠇⠀⠀⠀⠀⠀⢠⠊⢀⡴⠒⠒⣄⠀⠀⠀⠀⠀⠀⢀⡜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠃⠀⠀⡇⠰⠶⠯⠾⠵⠛⠾⠙⠛⠛⠛⠟⠿⠭⠼⠑⠚⠐⠸",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢦⠈⠢⡀⠀⠘⡴⠁⠀⠀⣠⣿⡿⠛⠆⠈⠃⢉⣙⣻⣉⣃⣀⣤⠘⢷⣤⣀⡀⠀⡴⣃⠄⠊⠁⠀⠀⠀⠀⠀⢀⠇⢠⡏⠀⠀⠀⢸⠀⠀⠀⠀⢀⣴⠃⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⠀⠀⠀⡇⢀⡤⣠⢤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣄⣀⠀⠐",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠂⠀⢀⣴⠊⠉⠆⠀⣀⣀⠤⠤⠘⠒⠒⠛⠂⠉⣁⣤⢶⣿⡿⠋⢀⡠⠔⠊⠉⠉⠉⠉⠉⠙⠛⡇⠀⢸⣽⣷⠉⠉⣰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢆⠀⠓⠤⡀⠀⡟⠀⠀⠠⠚⠉⠀⠀⠀⡥⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⡇⢈⣀⣁⣀⣠⡠⠤⠤⠤⠤⠤⠤⠤⠤⣄⣈⠉⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠝⠈⠓⠒⠉⠀⠀⢸⠉⠀⠀⠀⠀⣀⣀⣠⢤⠴⣶⣯⣷⣾⠿⠋⣠⠖⠁⢀⣠⣴⣶⣿⣿⣷⣶⣦⣤⠃⠀⣸⡿⡟⢀⡤⠼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠀⠀⣠⠞⠀⠀⠀⡀⠀⠀⠀⠀⢀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠀⠀⠀⡟⠁⠂⠁⠉⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁⠈⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠀⢀⡀⠀⠀⠀⠙⠒⢲⡞⣍⣳⠬⢶⠻⡏⡟⣾⣷⢧⣤⣴⠃⢀⣴⣿⣿⣿⠿⣟⡿⣿⣿⣿⡟⠀⢀⡯⠊⠀⠘⢦⠰⠀⢀⠤⠀⠂⠤⣀⠀⠀⠀⢀⣨⠔⠊⠁⠀⠀⠀⠊⠀⠀⠀⠀⣠⠊⠀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⢸⡴⢦⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠂⠀⠸",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠐⠈⠀⠀⠀⢰⣄⠀⠿⡀⠀⠀⠀⠀⢀⡏⠁⢀⠴⠚⠈⢷⣾⢿⣼⡄⠙⠧⣀⣾⣿⣿⣿⣭⢟⢫⡙⢭⣹⠟⠀⢀⡾⠒⠉⠉⠉⠀⣀⠆⠁⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠠⠔⠋⠀⡠⠔⠀⠈⠀⠀⠀⠁⠢⡀⢀⣠⡀⠀⢀⠔⠈⣁⠱⠄⠀⠀⠀⠀⢸⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣬",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⡆⠀⠀⠀⠀⠰⣌⡣⣽⡀⢳⡀⢀⣴⡾⠟⠁⠀⠘⣗⣒⣊⠥⣀⠸⣿⣿⡦⣀⠈⠙⠻⠿⢯⣔⣊⣦⡽⠖⠋⠀⣠⣾⠁⠀⠀⠀⠀⡔⠁⠀⠀⠀⢀⣀⠠⠠⠤⠀⠠⠀⠀⠐⠒⠒⠒⠒⠈⠁⠀⠀⠀⠀⠎⠀⠀⠀⣠⡴⢢⡀⠀⠀⢳⠎⡘⢀⡴⠡⠊⠀⠀⠀⠀⠀⠀⠀⠀⡿⡆⠀⠀⠀⡷⠶⠶⠶⠶⠶⠶⠶⠶⠶⠾⠾⠿⠳⠶⠖⠂⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⡇⠀⠀⠀⠀⠀⢨⣋⠈⢷⡘⡏⠁⠙⡆⠀⠀⠀⢠⠚⠀⠀⠀⠈⠣⡘⠛⢯⠭⠵⠢⢄⣀⡀⠀⠀⢀⣀⣠⢴⣺⡝⠱⠀⠀⠀⢀⠌⠀⠀⢀⡴⠚⠉⠉⠉⠐⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⠀⠀⠠⢠⠏⡆⢠⠇⠀⠀⣸⠀⠙⠊⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⣤⣷⢧⠀⠀⠀⢳⠀⡀⢀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠐⠀⢣⠀⠀⠀⠀⠀⠀⠀⠙⢶⣿⠛⠉⠉⣠⠤⠐⠊⠁⠀⠀⠀⠀⠀⠀⠈⠉⠑⠛⠒⠊⠁⠙⢦⢹⠸⣌⠳⣘⠶⠃⠀⠀⣇⠀⣀⡎⠀⠀⢪⡏⠀⠀⣆⠀⠀⠀⠀⠡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠁⣏⠀⠛⠋⣀⡤⠞⠁⠀⠀⠀⠀⡆⠀⠀⠀⠀⠀⠀⣠⣾⠟⣿⣿⠀⠀⠀⢺⠛⠛⠛⠛⠛⠛⠻⠟⠿⠿⠿⠿⠿⠭⠃⠀⠸⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠙⢤⡀⡜⠁⠀⠀⠀⠀⣀⠤⠐⠈⠉⠉⠁⠢⡤⡀⠀⠀⠀⠀⠀⡯⠷⣌⡷⠋⠀⠀⠀⠀⠘⢯⢼⠁⠀⠠⡏⢳⣄⠀⣿⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠁⠀⠀⠀⠘⢲⣒⠉⠁⠀⠀⠀⠀⠀⢀⡜⠀⠀⠀⠀⢀⡠⢚⣵⠋⠀⢻⣿⠀⠀⠀⢸⣦⣴⣦⣶⣶⣶⣶⣶⣦⣶⣤⣦⣤⣀⣀⢠⠃⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠣⣀⠀⠣⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠐⠢⠤⠒⡈⢁⠀⠤⠠⠤⣤⠤⣀⠀⢁⠀⠱⡀⣀⠠⣤⠇⠀⠀⠀⠀⠀⠀⠀⣀⣠⣼⠾⡀⠀⠀⣷⢄⢿⡂⣹⡇⠀⠀⠀⠀⠀⠡⡀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠃⠀⠀⠀⢀⠎⠥⠜⠀⠀⠀⠀⣀⡤⠖⠋⣀⠠⠄⠒⠈⠁⠀⠘⠁⠀⠀⢸⣿⠀⠀⠀⡎⠀⢀⡀⡀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⣦⡘⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⡌⣧⠘⡀⠀⢣⡏⣸⠀⣀⣀⣀⡀⠀⠀⠀⣼⡟⠋⠀⠀⣷⡀⠀⠹⡌⠳⣷⣸⡏⢆⠀⠀⠀⠀⠀⠐⢄⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⣀⠮⠤⢄⡠⢤⠤⣶⡯⠗⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠠⡀⠀⠀⢸⣾⠀⠀⠀⡗⠛⠛⠛⠙⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠀⡇⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠈⠀⠈⠓⠾⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢀⠀⢠⡄⢸⣺⡄⠁⠀⡸⢧⣻⠍⠟⠛⠛⢿⠷⠀⡀⠉⣠⣆⣤⡾⣿⣷⣄⠀⠈⢦⡈⢎⠳⣄⠱⡀⠀⠀⠀⠀⠀⠱⡆⠒⠒⠀⠁⠀⣠⠤⡤⠊⢀⣄⠀⡠⣤⡾⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡄⠀⠀⡏⠀⠀⢸⠀⣀⣀⣀⣄⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⣸⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠉⠓⠢⠄⣀⠀⠀⠀⠀⠀⠠⣄⡀⠘⢆⠣⠀⢧⠀⣿⠃⠀⠀⣽⢬⢯⡳⣷⢦⣤⠤⣿⠷⣷⡞⠉⢿⣿⡿⠃⣿⣏⢶⣄⠀⠙⠮⣀⠈⠳⡌⢢⡀⠀⠀⣀⡀⠈⠣⡀⠀⢠⠋⠀⠀⠀⢀⠎⢸⢉⡵⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣧⠀⠀⠀⢸⢻⡄⢰⡇⠀⠀⢸⠀⠀⠀⠈⠈⠉⠉⠉⠉⠉⠉⠋⠙⠛⠀⡏⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢃⣀⡴⠀⠂⠠⡀⠀⠀⠀⠀⠀⠀⠈⠑⠒⠠⢄⡀⠉⢮⠂⡌⣆⠱⡘⠀⣿⠀⠀⠘⠀⠀⢳⡑⡞⣾⢋⣶⣀⠀⢹⣷⠀⠀⢀⡄⣠⡿⢿⡈⠙⢵⡢⢄⣈⣉⡒⠼⢦⠈⢦⣼⢫⣿⠞⠉⢉⡦⡇⠀⠀⠀⢠⢻⣆⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣯⡳⣄⠀⠘⡧⣇⢸⡇⠀⠀⢸⠰⠴⣶⣶⣶⣶⣖⣶⣲⣖⣶⣶⡶⠦⢰⠁⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠬⠒⠂⢄⡀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠃⠀⠑⠢⢙⠢⢸⡄⢷⠀⡏⠠⠀⠀⠀⠀⠘⣷⡄⠘⣿⣯⢿⣧⠀⢻⡆⠀⠺⡼⢋⣷⢬⣣⠀⡀⣀⢉⡒⢦⣌⣉⣉⡳⣼⢰⠏⣏⡀⣠⡿⠀⠀⠀⠀⢀⣼⢼⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⣼⣷⣤⣷⡹⡼⡇⠀⠀⢸⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⣠⠖⠀⠘⣇⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⠀⠀⠀⠑⠢⡇⢼⢸⠁⠁⠀⠀⠀⠀⠀⡏⢣⠀⣿⣿⠏⠃⠀⢸⣷⣄⣤⣤⡽⠶⠚⠉⠛⡣⠄⠀⢀⠉⠈⠁⠀⠉⠉⠉⠉⠉⠉⢓⠃⠀⠀⠀⣠⣞⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⣉⣧⠀⠀⢸⠀⠉⠿⠷⠶⠶⠾⠶⠿⠿⠻⠯⠉⢰⠃⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠳⣄⣀⡴⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⠀⠀⠀⠀⠀⠀⢱⣸⡏⠈⠀⠀⣄⢀⣠⣾⣴⣦⡄⣻⠏⢠⣠⣿⣿⣝⣹⡞⣡⣴⠶⠛⣛⣩⣴⠎⢉⣉⣀⠀⠀⣀⣠⣴⣋⣠⣤⣴⠾⡀⠀⠀⠀⠽⣌⡟⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣤⣤⣤⢤⡒⠒⠪⠳⣼⠀⠀⠈⡄⠲⠤⣤⢤⣤⢤⡤⢤⠤⡤⠶⠀⡜⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠓⠄⢠⠀⠀⠀⠀⠀⠀⢀⡆⠀⠀⠀⠀⠀⠀⢘⠀⠀⠀⠀⠀⠀⠀⢨⠞⠀⠀⠀⠀⡅⠉⠟⢻⠟⢻⠀⢹⣶⣿⡿⣿⠿⢡⣾⣿⠟⣡⣾⠟⠋⣁⣤⢤⣃⣤⡴⠞⡻⠍⠁⠀⠀⢠⡞⡍⠀⠙⠀⠀⠀⡴⡸⣏⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⢖⡫⣵⠶⠛⠉⠁⠀⠀⣱⠀⠀⠀⠀⢆⠀⠀⢣⠀⠀⠈⠉⠈⠁⠉⠈⠀⠁⠀⡴⠁⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡀⠀⠀⠀⠀⢠⡎⠀⠀⠀⠀⠀⣀⠤⠊⠀⠀⠀⠀⢀⠠⠐⠁⠀⠀⠀⠈⠀⡇⠀⠀⣼⣤⠏⠀⢸⣷⠏⠀⠃⠀⠘⢿⣯⣴⣿⢇⣴⣿⡟⣡⣾⡏⠭⠘⠦⣄⠤⠤⠤⣤⠏⠀⣇⠀⠀⠀⠀⠀⢫⢉⣽⡾⡄⠀⠀⠀⠀⠀⠀⠀⢀⡴⣋⢦⢿⢋⡧⠀⢀⣤⠦⣤⠀⠸⢤⠀⠀⠀⠀⠠⡀⠈⡇⠠⠿⠽⠯⠟⠹⠋⢋⡩⠚⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠤⠐⠊⠁⠀⠉⠈⠁⠉⠀⠀⠀⠀⠀⠀⡤⠊⠀⠀⠀⠀⠀⠀⠠⠃⢀⠇⠰⠾⠛⣉⣀⣀⢸⡿⢀⣠⣴⣶⣶⣿⡟⢻⣿⣿⠟⣹⣴⡿⢻⣧⡀⠀⠀⠀⠉⠓⠳⢿⡀⠀⡽⠄⠀⠀⠀⠀⠘⡟⢸⡇⣧⠀⠀⠀⠀⠀⢀⡴⣋⢶⠝⠁⠈⢻⢠⠄⠉⠀⠀⠈⠀⢠⢾⠀⠀⠀⠀⠀⠀⠁⠲⠤⠠⠄⠄⠤⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⣿⡍⣦⠀⠀⠀⠐⠀⢀⠞⣠⡄⠀⠰⣁⣠⡏⢨⣗⣾⠟⠋⢀⣀⠀⡇⣨⠿⣶⣶⣿⠛⠀⠀⠻⣿⣶⣦⢤⡒⠲⣊⣿⠃⠀⢷⠀⠀⠀⠀⠀⠀⠘⢤⣻⡌⣧⡀⠀⢀⣠⢏⡲⡱⠃⠀⠀⠀⠈⣏⣰⠄⠰⠚⠓⣆⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠸⠂⠒⠊⠁⠀⠀⢀⣠⢶⠿⣊⠟⠀⢀⣴⠿⠋⠀⣸⣷⠈⢠⣾⡿⠛⠛⠹⠟⠉⠀⠀⠉⠁⣀⣀⣾⣄⠣⡙⢷⡌⢦⣟⡿⠀⠀⡾⡆⠀⠀⠀⠀⠀⠀⠀⡱⢿⡰⣍⡛⢭⢢⡓⡼⠁⠀⠀⠀⠀⠀⢸⣁⣤⠠⣤⣌⠁⠀⠈⡇⠀⠀⠀⠀⡀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡅⠀⠀⠀⠀⢀⠤⢚⣹⣾⡿⠋⠁⠀⢀⣈⡠⢞⡍⢀⠏⣷⠀⠻⠋⠀⠀⢀⣀⣤⣤⠶⠒⢋⣩⣡⠴⠚⠙⢷⠘⡈⣹⠏⡞⢱⡏⡆⡷⠙⣄⠀⠀⠀⠀⠀⠀⠓⢬⢻⡴⡹⢌⡖⣭⠃⠀⠀⠀⠀⠀⠀⣜⡥⠄⠀⠀⠸⡆⠀⢈⣇⠠⠐⠈⠀⠀⠀⠀⢱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⢀⠞⣡⣴⣿⡿⠉⠀⠀⠀⢸⠁⢀⡽⠎⢀⣎⣤⣿⣀⣤⢶⣶⠿⠿⠛⠉⣀⠤⠚⠛⠛⠒⠒⠒⠒⠊⢣⡿⠃⡼⠁⠸⡇⢹⣿⢠⠸⡄⠀⠀⠀⠀⠀⠀⠀⢯⣽⣎⠵⡸⡼⠀⠀⠀⠀⠀⠀⢰⡫⠴⠂⣶⣶⢦⡀⢰⡟⠁⠀⠀⠀⠀⠀⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡖⠈⠀⠀⢀⡴⢃⣨⠾⢻⠋⠀⠀⠀⠀⢠⠾⠚⠉⣠⣴⣿⠟⠋⣡⠔⠋⢉⣀⣤⠶⠾⠭⠖⠒⠒⠛⠛⠚⠓⠒⠋⣩⠏⠀⣸⠃⠀⠀⠀⠈⢿⡼⡀⠱⣄⠀⠀⠀⠀⠀⠀⠘⢄⣈⣷⡵⠃⠀⠀⠀⢀⡀⠴⣅⣀⠤⠚⠀⢨⠿⢁⣠⠇⠀⠀⠀⠀⠀⠀⢀⡴⠇⠒⠀⠁⠒⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⢀⡀⠀⠀⣀⠧⠄⣢⠤⠟⠒⠛⠒⠢⢦⣽⠶⢦⣄⣀⠀⣠⡴⠚⣩⠴⢃⠴⢋⡠⠔⢊⡵⣎⡵⠴⡒⠒⣎⢉⣉⡭⠝⠋⣑⣲⡞⢡⠃⡰⠃⣴⠃⠀⠀⠀⠈⢆⢣⠀⠈⠑⡄⠀⠀⠀⠀⠀⠀⠀⠙⠙⠨⠭⠮⢭⡹⣄⣠⠒⠉⢢⣄⣰⠊⠀⡏⡩⠄⠒⠈⠐⡄⠀⠔⠋⠀⠀⠀⠀⠀⠀⣡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠎⠀⢀⣠⠤⠃⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⠬⣍⢻⡯⠴⣉⣁⡖⠡⠂⠁⢠⡴⠿⠭⠴⠦⢤⠟⠛⣯⣁⣰⠤⢟⡋⡡⠊⠰⠁⡴⢡⢪⠎⠀⠀⠀⠀⠀⠈⢦⣣⠀⠀⠸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⢠⡾⠁⠀⣠⠔⠋⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠀⡾⢀⠾⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢦⡈⠓⢤⡀⠈⠹⠶⣖⠧⠤⠴⠶⢶⠶⢺⠛⠛⢹⣀⣤⠞⢋⠜⠀⡴⢁⡴⡑⡡⠃⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠈⠒⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠔⠊⠑⠜⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⢀⠞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⠀⣸⠗⡏⠀⠀⠀⢀⠤⠤⢤⠤⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⢦⠀⠉⠲⣤⣀⠀⠈⠁⠀⠀⣀⣠⡬⣷⠺⡋⡏⠀⠔⠁⢀⢞⡠⢋⠖⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠒⠀⠈⠱⡄⠐⠂⠒⠐⠂⠤⠚⠀⠀⠀⣀⡤⠒⠉⠁⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⢀⡔⠉⠉⠐⠤⡀⠀⠀⠀⠀⠀⠀⢀⠆⣇⠀⠀⠀⠀⣾⠉⠀⢰⡏⣀⣠⣈⣿⢧⣌⡑⠤⡠⠤⣀⡀⠀⠀⠀⠀⠀⠈⢷⣦⡀⠙⢯⣙⠛⠶⣤⡀⣑⠊⠁⠀⠀⢱⣹⡀⠀⣴⠿⠋⣰⡫⠊⠀⠀⠀⢶⡒⠒⠒⠶⠶⣖⣦⡬⠭⠥⠤⠶⠖⠶⠆⠀⠙⠳⠖⠛⣦⣤⡤⠖⣲⠖⠊⠁⠀⠀⠀⠀⠀⠀⡠⠐⠁⢠⡴⢢⡀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⣠⠤⣤⡀⠈⡄⠀⠀⠀⠀⠀⣼⠏⠉⢀⠔⢦⠚⠹⠃⠀⣸⣾⠟⠛⠉⠛⠚⠶⣝⣒⢒⢶⣯⡇⠀⠀⠀⠀⠀⠀⠘⠻⣷⣄⠀⠉⠳⣄⠀⠉⠒⠬⣑⡚⢶⠦⠟⡇⠈⠁⣠⡾⠋⠀⠀⠀⠀⠀⠀⠈⠉⠐⠒⠒⠐⠂⠒⠒⠲⠤⢤⣤⣤⠴⠶⠶⠒⠛⢋⡩⠤⠶⠍⣀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⡜⢡⠀⣷⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⢀⠖⠉⢀⡽⣿⣬⢓⣦⡙⠶⢷⡀⠀⠀⠀⠀⣧⢦⠀⡯⣆⠘⠇⠘⣇⣼⡟⠁⠀⠀⠀⠀⠀⠀⠀⠈⠻⣬⢿⣞⢆⠀⠀⠀⠀⠀⠀⠀⢱⠙⠷⣝⠢⢌⡑⠢⠄⣀⠀⠀⠈⠉⢹⢸⠀⠐⠋⠀⢀⣤⡶⠖⠂⠀⠀⠀⠀⠐⢄⠀⡀⠀⠤⠄⠒⣀⡀⠀⠀⢀⣠⣤⡴⠛⠓⠒⠒⠒⠤⣀⠉⠢⠀⠀⠀⠀⠀⢰⠀⠀⠄⢰⣣⠎⠀⣿⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⣀⣸⣠⢞⣭⠖⠓⠉⠉⠈⠉⠉⠒⠼⣒⠤⢄⡠⡇⠀⠀⡇⠳⣄⡀⠀⣼⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢞⢯⡻⣦⡀⠀⠀⠀⠀⠀⠈⡇⠀⠀⠀⢠⡏⠒⠤⣒⠬⣉⠀⠂⠀⢏⣆⠀⠀⢰⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢑⣠⠴⠖⢚⣉⡥⠔⢒⡮⠙⠊⠀⠉⠉⠉⠐⠒⠤⡀⠈⢧⢣⠈⣦⠀⠀⠀⠸⠀⠀⠀⠀⠁⠀⣰⠃⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⢰⠉⣠⢲⣹⠟⠁⠀⣩⡽⢋⣴⠦⣀⠀⠀⠈⠙⢷⣝⢵⢢⡐⠁⢀⠈⠙⣶⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⡜⣽⡗⢄⠀⠀⠀⠀⠀⢳⠀⠀⠀⣾⠀⠀⡄⠀⠉⠙⠛⠶⠤⠸⠸⡆⠀⠉⠀⠀⠀⠀⠀⠀⣀⠤⠔⠒⠉⠁⠀⠊⠉⢉⡠⠔⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣸⢠⠀⣿⢣⠀⠀⠀⠣⡀⠀⠀⣠⠜⠁⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠸⣴⣵⠚⠀⠀⢀⣼⠟⣡⡾⠁⣠⣾⠟⢂⡀⠀⠀⠹⣿⣏⣿⣀⡘⣶⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣷⢸⣇⢨⡂⠀⠀⠀⠀⠀⡇⠀⢸⡭⠀⣰⡇⠀⢀⡆⠀⠀⠀⠀⢣⠱⡀⠀⠀⠀⠀⠀⠀⠙⠒⣒⠀⠀⠀⣀⠤⠒⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⢸⠀⢿⢘⠀⠀⠀⠀⠀⠉⢻⠀⠀⠀⠀⠀⢈⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠰⡟⠁⠀⠀⣰⡿⢃⣾⠏⢀⣶⠟⠁⢀⣴⡕⢤⠀⠀⠈⢿⣿⡗⠛⠛⠷⠶⠦⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢟⢢⢻⣆⠉⢆⠀⠀⠀⠀⢸⠀⣦⠇⣰⡟⠀⢀⠎⡇⠀⠀⠀⠀⠀⡇⠱⡤⠤⠄⠒⠐⠂⣉⣉⠠⠔⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⢀⠏⢸⣸⠸⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠘⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠃⢱⠁⠀⢠⣾⠟⣰⡿⠁⣰⡿⠃⠀⣰⡿⠋⣠⣾⠵⡄⠀⠀⠡⣱⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⣎⢲⡏⡸⠀⠈⢢⠀⠀⠀⢸⢰⡟⢠⡹⠀⢀⠎⠀⡇⠀⠀⣀⠠⠒⣁⠤⠴⠤⠔⠒⠊⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠐⠡⢂⠎⠀⣇⡏⢸⠀⠀⢀⠠⠒⠁⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⢾⠀⣴⡿⢃⣾⠏⣠⡾⠋⠀⣠⣾⠟⢀⣾⠟⢁⡴⡾⢆⠀⠀⠘⣇⡀⠀⠀⠀⠀⠈⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⣴⢣⣹⣰⠏⠀⡇⠀⠰⡏⠀⠀⠀⢸⡞⠁⡵⠁⡠⢻⠀⠸⡁⣒⡡⠔⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⡁⠊⡰⠋⠀⣸⡟⠀⡎⠀⡐⠁⠀⠀⠀⠀⠀⠀⣀⡤⠤⣄⠀⢃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⢸⡸⠋⣰⡟⢁⣴⠟⠁⣠⣾⠟⢁⣼⠟⠁⣠⣾⠟⠁⣠⣷⠀⠀⠨⣷⠀⠀⠀⠀⠀⠘⣟⢧⡀⠀⠀⠀⠀⢠⣾⠵⠊⠁⠀⠀⡴⡷⠀⠀⡇⠀⠀⠀⢻⣀⡾⢁⠜⡱⢋⡠⠖⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠒⠠⠀⢀⠀⠀⠀⠀⠀⠀⠠⠔⠊⢀⡨⢤⠞⠁⠀⢰⡟⠀⡜⠀⡘⠀⠀⠈⠀⠀⠀⠀⡰⠁⠀⡴⠸⡄⠀⠡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⡇⠘⠃⣴⡿⠁⢀⣶⠟⢁⣴⡿⠉⢠⢞⡵⠃⢠⢞⡽⠃⣳⡃⠀⠈⢿⡀⠀⠀⠀⠀⠘⣞⡧⠀⠀⠀⣴⡿⠁⢀⣀⣀⡤⠔⣇⠀⠀⡴⠃⠀⢀⠔⣻⠏⠀⢡⠾⠓⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢄⣀⡀⠀⠀⠈⢁⡠⠤⠐⠂⣠⠴⠋⡰⠋⠀⠀⢠⠟⠀⣰⠃⠀⡅⠀⡄⠀⠀⠀⠀⢰⡇⠀⠸⣇⣰⠃⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠸⡄⠾⠋⢀⣴⡟⢁⣴⡿⠋⢀⡴⡻⠋⢀⡴⣫⠋⢀⣴⡟⠙⣄⠆⠈⢳⡄⠀⠀⠀⠀⢿⠇⠀⠀⢠⡟⣩⠟⠁⠀⡞⠀⠀⠈⠳⠾⠔⠈⠀⣨⣿⠁⣀⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢟⢤⡀⠀⠉⠉⠉⠀⢀⣠⠴⠋⠁⣠⠞⠀⠀⠀⣰⠋⠀⣰⠋⠀⢠⠀⠀⠀⠀⠀⠀⠀⠘⡇⠀⠀⠀⠁⠀⠀⣠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠱⣄⠐⠿⠃⣠⡿⠋⠀⣤⣯⠞⠁⡴⣫⠞⠁⣠⣾⠋⢀⣼⡿⠳⢄⠀⠹⣦⡀⠀⠀⠀⢰⣤⡀⢸⢡⡟⠀⠀⢸⡇⠀⠀⠀⡴⠃⠀⡠⢮⡥⡮⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡀⠈⠙⠒⠒⠒⢋⡡⠔⠀⣠⠜⠁⠀⠀⣠⡾⠁⠀⡰⠃⠀⠀⠈⡀⠀⠣⠀⠀⠀⠀⠀⢣⠈⠑⠒⠒⠂⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠈⠢⡀⠚⠁⠀⣠⣾⠟⠁⣠⢞⡽⠁⢀⣾⠟⠁⣠⢯⠞⠀⠀⣸⡿⡀⠈⠓⢦⡀⠀⠀⢿⣷⣼⠀⠻⢤⠀⠀⠙⠶⠖⠀⠈⣍⣉⣀⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡔⠒⠒⠒⠈⠁⠀⣠⠞⠁⠀⣀⠤⣺⠋⠀⠀⡴⠁⠀⠀⠀⠀⢣⠀⠀⢀⡀⠀⠀⠀⠸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠈⠳⢄⠈⠛⠁⣠⢞⡵⠋⢀⡴⣻⠋⢀⡼⡵⠋⠀⢀⣾⠟⠀⠈⣵⠦⣀⠈⠛⢯⣏⡹⢻⡄⠀⠰⣄⡀⠀⠀⣦⣀⣀⠤⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⣀⠀⢀⡠⠞⠃⠠⢔⣈⡠⠖⠉⡇⢀⠞⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⣽⠀⠀⢀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢤⠐⠓⠋⠀⣠⢏⡼⠁⣠⢏⠞⠁⠀⣰⡿⠃⠀⣠⡾⠋⠀⣠⣷⢄⡀⠉⢷⡩⡏⠓⠒⠚⠈⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠊⠀⠀⠀⠀⠀⢁⠀⢀⠎⡠⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠏⠀⡴⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⣀⠀⠑⠋⢀⡴⣣⠋⠀⣀⣾⠏⠀⢀⣾⠏⠀⢀⣴⡟⠁⠀⣩⣦⠀⠙⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⡀⢃⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⢤⡀⠉⠞⠁⠀⣴⡟⠁⢀⣴⡿⠁⠀⣤⣿⠋⠀⣠⣾⠟⠀⢑⣄⢡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢂⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⢄⡀⠛⠉⠀⣠⣾⠋⠀⢀⣾⡟⠁⢀⣴⡟⠁⠀⣴⠟⠀⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⠤⡀⠁⠀⠀⣰⡿⠋⠀⣠⢾⠏⠀⣠⣾⠋⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠢⣄⠉⠁⢀⡴⡷⠋⢀⣴⠟⠁⢀⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
              "*/",
              "",
              "void solve(){",
              "    ${1:int n; cin >> n;}",
              "    $0",
              "}",
              "",
              "int main()",
              "{",
              "    fast();",
              "    int t;",
              "    cin >> t;",
              "    while(t--){",
              "        solve();",
              "    }",
              "}"
            ],
            "description": "one_piece_solt"
          }
    
}